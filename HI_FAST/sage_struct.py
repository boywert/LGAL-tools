import numpy as np
    # Define the data-type for the public version of SAGE
struct_dtype = np.dtype([
    ('SnapNum'                      , np.int32),
    ('Type'                         , np.int32),
    ('GalaxyIndex'                  , np.int64),
    ('CentralGalaxyIndex'           , np.int64),
    ('SAGEHaloIndex'                , np.int32),
    ('SAGETreeIndex'                , np.int32),
    ('SimulationHaloIndex'          , np.int64),
    ('mergeType'                    , np.int32),
    ('mergeIntoID'                  , np.int32),
    ('mergeIntoSnapNum'             , np.int32),
    ('dT'                           , np.float32),
    ('Pos'                          , (np.float32, 3)),
    ('Vel'                          , (np.float32, 3)),
    ('Spin'                         , (np.float32, 3)),
    ('Len'                          , np.int32),
    ('Mvir'                         , np.float32),
    ('CentralMvir'                  , np.float32),
    ('Rvir'                         , np.float32),
    ('Vvir'                         , np.float32),
    ('Vmax'                         , np.float32),
    ('VelDisp'                      , np.float32),
    ('ColdGas'                      , np.float32),
    ('StellarMass'                  , np.float32),
    ('BulgeMass'                    , np.float32),
    ('HotGas'                       , np.float32),
    ('EjectedMass'                  , np.float32),
    ('BlackHoleMass'                , np.float32),
    ('IntraClusterStars'            , np.float32),
    ('MetalsColdGas'                , np.float32),
    ('MetalsStellarMass'            , np.float32),
    ('MetalsBulgeMass'              , np.float32),
    ('MetalsHotGas'                 , np.float32),
    ('MetalsEjectedMass'            , np.float32),
    ('MetalsIntraClusterStars'      , np.float32),
    ('SfrDisk'                      , np.float32),
    ('SfrBulge'                     , np.float32),
    ('SfrDiskZ'                     , np.float32),
    ('SfrBulgeZ'                    , np.float32),
    ('DiskRadius'                   , np.float32),
    ('Cooling'                      , np.float32),
    ('Heating'                      , np.float32),
    ('QuasarModeBHaccretionMass'    , np.float32),
    ('TimeOfLastMajorMerger'         , np.float32),
    ('TimeOfLastMinorMerger'         , np.float32),
    ('OutflowRate'                  , np.float32),
    ('infallMvir'                   , np.float32),
    ('infallVvir'                   , np.float32),
    ('infallVmax'                   , np.float32)
])
properties_used = {}
for el in struct_dtype.names:
    properties_used[el] = False
